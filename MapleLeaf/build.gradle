apply plugin: 'com.android.application'
//apply plugin: 'android-apt'

static def releaseTime() {
    return new Date().format("yyyy_MM_dd", TimeZone.getTimeZone("UTC"))
}

android {
    compileSdkVersion rootProject.ext.compileSdk

    defaultConfig {
        applicationId rootProject.ext.packageName
        minSdkVersion rootProject.ext.minSdk
        targetSdkVersion rootProject.ext.targetSdk
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        flavorDimensions "versionCode"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
//        debug {//debug版本keystore配置
//            storeFile file("keystore/debug.keystore")
//        }

        release {//release版本keystore配置
            storeFile file("keystore/mapleleaf.jks")
            storePassword "584201314lew"
            keyAlias "maple_leaf"
            keyPassword "584201314lew"
        }
    }
    buildTypes {
        debug {
            buildConfigField "boolean", "LOG_DEBUG", "true"     // 显示Log
//            versionNameSuffix "-debug"
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
            signingConfig signingConfigs.debug
        }
        release {
            buildConfigField "boolean", "LOG_DEBUG", "false"    // 不显示Log
            minifyEnabled true          //release包是否混淆
            zipAlignEnabled true        //Zipalign优化
            shrinkResources true        //支持自动去除没有使用的资源
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'//混淆规则
            signingConfig signingConfigs.release   //签名
        }
    }

    lintOptions {   //执行lint检查，有任何的错误或者警告提示，都会终止构建，我们可以将其关掉。
        abortOnError false
    }
    productFlavors {
        dev{
            // 每个环境包名不同
            applicationId rootProject.ext.packageNameDebug

            // 动态添加 string.xml 字段；
            // 注意，这里是添加，在 string.xml 不能有这个字段，会重名！！！
            resValue "string", "app_name", "meapleLeaf"
//            resValue "bool", "isrRank", 'false'
            // 动态修改 常量 字段
//            buildConfigField "String", "ENVIRONMENT", '"dev"'
            // 修改 AndroidManifest.xml 里渠道变量
//            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "dev"]

            minSdkVersion 21    //仅开发用，优化编译速度（instance run）
        }

        Baidu {
            applicationId rootProject.ext.packageName
            resValue "string", "app_name", "枫林"
        }
//        pgy {}
//        xiaomi {}
//        _360 {}
//        WanDouJia {}
//        Tencent {}
//        meizu {}
//        huawei {}
//        yingyonghui {}
    }

    productFlavors.all { flavor ->
        flavor.manifestPlaceholders = [PACK_NAME: name]
    }

    android.applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "MapleLeaf_${variant.productFlavors[0].name}_${variant.versionName}(${variant.versionCode})_${releaseTime()}_${variant.buildType.name}.apk"
        }
    }
    buildToolsVersion '27.0.3'
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

//    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
//        exclude group: 'com.android.support', module: 'support-annotations'
//        exclude group: 'com.google.code.findbugs'
//    })

    testImplementation 'junit:junit:4.12'
    androidTestImplementation "com.android.support:support-annotations:${rootProject.ext.support}"
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test:rules:1.0.1'
    // Optional -- Mockito framework
    testImplementation 'org.mockito:mockito-core:1.10.19'

    debugImplementation "com.squareup.leakcanary:leakcanary-android:${rootProject.ext.leakcanary}"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:${rootProject.ext.leakcanary}"
    testImplementation "com.squareup.leakcanary:leakcanary-android-no-op:${rootProject.ext.leakcanary}"
    // support lib
    implementation "com.android.support:appcompat-v7:${rootProject.ext.support}"
    implementation "com.android.support:recyclerview-v7:${rootProject.ext.support}"
    implementation "com.android.support:cardview-v7:${rootProject.ext.support}"
    implementation "com.android.support:support-v4:${rootProject.ext.support}"
    implementation "com.android.support:design:${rootProject.ext.support}"
    implementation 'me.leolin:ShortcutBadger:1.1.4@aar'
    implementation "com.google.code.gson:gson:${rootProject.ext.gson}"
    // butterknife
    annotationProcessor "com.jakewharton:butterknife-compiler:${rootProject.ext.butterKnife}"
    implementation "com.jakewharton:butterknife:${rootProject.ext.butterKnife}"
    // rxjava
    implementation "com.jakewharton.rxbinding:rxbinding:${rootProject.ext.rxbinding}"
    implementation "com.trello:rxlifecycle:${rootProject.ext.rxlifecycle}"
    implementation "com.trello:rxlifecycle-components:${rootProject.ext.rxlifecycle}"
    implementation "com.tbruyelle.rxpermissions:rxpermissions:${rootProject.ext.rxpermissions}"
    // dagger
    annotationProcessor "com.google.dagger:dagger-compiler:${rootProject.ext.dagger}"
    implementation "com.google.dagger:dagger:${rootProject.ext.dagger}"

    implementation "com.squareup.retrofit2:retrofit:${rootProject.ext.retrofit}"
    implementation "com.squareup.retrofit2:converter-gson:${rootProject.ext.converter}"
    implementation "com.squareup.retrofit2:adapter-rxjava:${rootProject.ext.converter}"

}
